%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: Step_5.2.4
  m_EditorClassIdentifier: 
  Title:
    m_Untranslated: Make the furniture pushable
  m_Paragraphs:
    m_Items:
    - m_Type: 9
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_CodeSample: 
      m_PostInstructionImage: {fileID: 0}
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 2800000, guid: 6490f2b8e1c874f75af6576dba860cb1, type: 3}
      m_VideoUrl: https://storage.googleapis.com/learn-media-public/Essentials-Pathway/5.2%20-%20Complete%20your%202D%20Game/5.2.4%20-%20Make%20the%20furniture%20pushable%20-%20VIDEO.webm
      m_Video: {fileID: 32900000, guid: 5b69f4d6321874ec19173e92689ae1ad, type: 3}
      m_Media:
        m_ContentType: 2
        m_Image: {fileID: 0}
        m_VideoClip: {fileID: 0}
        m_Url: https://storage.googleapis.com/learn-media-public/Essentials-Pathway/5.2%20-%20Complete%20your%202D%20Game/5.2.4%20-%20Make%20the%20furniture%20pushable%20-%20VIDEO.webm
        m_AutoStart: 0
        m_Loop: 0
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: If you test your scene now, the player will be able to go
          through the furniture like a ghost. Just like with the player, these physical
          furniture objects need <b>2D Collider</b> and <b>2D Rigidbody</b> components
          to collide and move around as expected.
      m_CodeSample: 
      m_PostInstructionImage: {fileID: 0}
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_VideoUrl: 
      m_Video: {fileID: 0}
      m_Media:
        m_ContentType: 0
        m_Image: {fileID: 0}
        m_VideoClip: {fileID: 0}
        m_Url: 
        m_AutoStart: 1
        m_Loop: 1
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 1
      Title:
        m_Untranslated: Instructions
      Text:
        m_Untranslated: "<b>1.</b>  In the <b>Hierarchy</b> window, select all furniture
          objects, not including the rugs, by holding <b>Shift</b> or <b>Ctrl</b>
          (macOS: <b>Cmd</b>) to select multiple objects at once. \n\n<b>2.</b> 
          With all furniture selected, go to the <b>Inspector</b> window and select
          <b>Add Component.</b> Search for and add a <b>Rigidbody 2D</b> component
          to each selected object.\n\n<b>3.</b>  Set the <b>Gravity Scale</b> of
          each <b>Rigidbody 2D</b> component to <b>0</b> to prevent the furniture
          from falling to the bottom of the scene.\n\n<b>4.</b>  With all the furniture
          still selected, select <b>Add Component</b> again and search for <b>Box
          Collider 2D.</b> Add this component to introduce collision detection to
          each piece of furniture.\n\nIf you added any circular furniture (like the
          lamp or plant), you\u2019ll need to replace the <b>Box Collider 2D</b>
          component with a <b>Circle Collider 2D</b> component that more accurately
          represents its shape. \n\n<b>5.</b>  Select one of your circular furniture
          sprites and locate its <b>Box Collider 2D</b> component. Either right-click
          the component\u2019s name or select the component\u2019s <b>More</b> menu
          (<b>\u22EE</b>), select <b>Remove Component,</b> then add a new <b>Circle
          Collider 2D</b> component instead.\n\n<b>6.</b>  Test the scene by entering
          <b>Play</b> mode. \n\nNotice how the objects now collide with each other
          and the player, but they slide like they\u2019re on ice. You\u2019ll fine-tune
          their physical properties in the next step to make things feel more realistic."
      m_CodeSample: 
      m_PostInstructionImage: {fileID: 0}
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_VideoUrl: 
      m_Video: {fileID: 0}
      m_Media:
        m_ContentType: 0
        m_Image: {fileID: 0}
        m_VideoClip: {fileID: 0}
        m_Url: 
        m_AutoStart: 1
        m_Loop: 1
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 0
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 0
    m_Pivot: {x: 0, y: 0, z: 0}
    m_Rotation: {x: 0, y: 0, z: 0, w: 0}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 0
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Done
  m_CompletedSound: {fileID: 0}
  m_FaqEntries: []
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls: []
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: Next
  m_DoneButton: Done
